import torch.nn as nn

model = nn.Sequential(  # Sequential,
    nn.Conv2d(1, 48, (5, 5), (2, 2), (2, 2)),
    nn.ReLU(),
    nn.Conv2d(48, 128, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(128, 128, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(128, 128, (3, 3), (2, 2), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(128, 256, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(256, 256, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(256, 256, (3, 3), (2, 2), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(256, 512, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(512, 1024, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(1024, 1024, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(1024, 1024, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(1024, 1024, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(1024, 512, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(512, 256, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.ConvTranspose2d(256, 256, (4, 4), (2, 2), (1, 1), (0, 0)),
    nn.ReLU(),
    nn.Conv2d(256, 256, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(256, 128, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.ConvTranspose2d(128, 128, (4, 4), (2, 2), (1, 1), (0, 0)),
    nn.ReLU(),
    nn.Conv2d(128, 128, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(128, 48, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.ConvTranspose2d(48, 48, (4, 4), (2, 2), (1, 1), (0, 0)),
    nn.ReLU(),
    nn.Conv2d(48, 24, (3, 3), (1, 1), (1, 1)),
    nn.ReLU(),
    nn.Conv2d(24, 1, (3, 3), (1, 1), (1, 1)),
    nn.Sigmoid(),
)

immean = 0.9664114577640158
imstd = 0.0858381272736797
